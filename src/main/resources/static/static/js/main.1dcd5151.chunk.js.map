{"version":3,"sources":["logo.svg","components/SwedishCard.jsx","util/IndexCardUtil.js","service/SvenskaSeService.js","components/IndexCard.jsx","repository/lectureRepository.js","components/LectureEdit.jsx","domain/lectureReducer.js","components/LectureOverview.jsx","components/Swipeable.jsx","components/YesNoQuiz.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","adjectiveFieldsToLabel","singular_utrum_indefinite","singular_neutrum_indefinite","singular_definite","plural","comparative","superlative","nounFieldsToLabel","singular_indefinite","noun_type","plural_indefinite","plural_definite","verbFieldsToLabel","infinitive","present_tense","preterite","imperative","supinum","SwedishCard","fieldToLabel","_class","_temp","editable","arguments","length","undefined","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this$props","props","data","onChange","objectWithoutProperties","className","react_default","a","createElement","assign","entries","map","_ref","index","_ref2","slicedToArray","dataField","label","autoFocus","Component","IDENTIFIER","keys","defaultProps","AdjectiveCard","NounCard","VerbCard","FreeTextCard","AdjectiveCardEdit","NounCardEdit","VerbCardEdit","FreeTextCardEdit","WORDTYPES","FREE_TEXT","VERB","ADJECTIVE","NOUN","getEditComponentByWordtype","wordtype","request","require","parse","_","getUrlFromQuery","query","process","REACT_APP_SVENSKASE_PROXY","document","location","origin","encodeURIComponent","trim","split","join","TYPE_NOT_FOUND_EXCEPTION","WORD_TYPES","substantiv","adjektiv","verb","other","buildVerb","root","result","cases","querySelectorAll","e","text","finiteIndex","Math","max","indexOf","infiniteIndex","presensParticipIndex","i","replace","buildAdjective","positiveIndex","comparativeIndex","superlativeIndex","_cases$i$split","_cases$i$split2","indicator","form","includes","_cases$_i2$split","_cases$_i2$split2","buildNoun","querySelector","singularIndex","pluralIndex","processSvenskaSeRequest","error","response","body","expectedWordType","console","log","wordType","rootOfWordType","forms","wordTypes","lemma","foundWordType","foundWordTypeTokens","determineWordType","toUpperCase","IndexCardQuiz","quiztype","german","swedish","onClick","SwedishComponent","onClickDelete","getDisplayComponentByWordtype","toLowerCase","tabIndex","IndexCardEdit","_React$Component","_this","call","defaultState","cloneDeep","state","callback","update","objectSpread","_this2","identifyingWord","onError","_url$headers","url","headers","Content-Type","Origin","options","getResult","_ref3","setState","ev","newWordType","target","field","JSON","stringify","onSave","ctrlKey","preventDefault","autofill","saveCard","altKey","handleWordtypeChange","focusInput","focus","preventScroll","_this3","Boolean","onKeyDown","handleShortcuts","bind","ref","handleChangeInSwedish","React","IndexCardSmall","_ref5","isFocused","URL","getById","id","onSuccess","statusCode","_JSON$parse","index_cards","lecture","indexCards","startsWith","LectureEdit","currentId","getLectureId","match","params","lectureId","currentIndexCard","name","description","nameInput","descriptionInput","loadIndexCards","prevProps","currentNumIndexCards","previousNumIndexCards","min","window","scrollTo","top","addIndexCard","post","save","filter","it","card","concat","toConsumableArray","values","history","push","resetIndexCards","_this4","updateIndexCard","deleteIndexCard","goBackToOverview","style","display","gridTemplateColumns","marginBottom","marginTop","saveLecture","IndexCard_IndexCardEdit","onAddCard","indexCard","IndexCard_IndexCardSmall","behavior","withRouter","connect","dispatch","type","DEFAULT_INDEX_CARD","lectureReducer","action","newState","splice","LectureMeta","onClickEdit","onClickStart","LectureOverview","snackMeta","lectureMeta","lectures","get","lectureMetas","errorBody","metaInfo","LectureOverview_LectureMeta","Swipeable","touchDownX","touches","screenX","onTouchStart","touchUp","changedTouches","abs","onSwipeRight","onSwipeLeft","onTouchEnd","children","givenProps","YesNoQuizResult","correct","wrong","redoQuiz","goBack","parseInt","gridColumnStart","gridColumnEnd","width","YesNoQuiz","unfinished","isTurned","newRound","shuffle","nextCard","turnCard","wasRight","_this$state$unfinishe","toArray","currentCard","slice","classname","_this$state","components_Swipeable","getElementById","onTouchDown","IndexCard_IndexCardQuiz","YesNoQuiz_YesNoQuizResult","_default","loaded","_this$state2","YesNoQuiz_YesNoQuiz","App","es","store","createStore","react_router_dom","react_router","path","component","Lecture","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dcd5151.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst adjectiveFieldsToLabel = {\r\n    singular_utrum_indefinite: \"Sg. u. obest.\",\r\n    singular_neutrum_indefinite: \"Sg. n. obest.\",\r\n    singular_definite: \"Sg. best.\",\r\n    plural: \"Pl.\",\r\n    comparative: \"Comp.\",\r\n    superlative: \"Sup.\"\r\n}\r\n\r\nconst nounFieldsToLabel = {\r\n    singular_indefinite: \"Sg. obest.\",\r\n    noun_type: \"en/ett\",\r\n    singular_definite: \"Sg. best.\",\r\n    plural_indefinite: \"Pl. obest.\",\r\n    plural_definite: \"Pl. best.\"\r\n}\r\n\r\nconst verbFieldsToLabel = {\r\n    infinitive: \"Inf.\",\r\n    present_tense: \"Presens\",\r\n    preterite: \"Pret.\",\r\n    imperative: \"Imp.\",\r\n    supinum: \"Supinum\"\r\n}\r\n\r\nconst SwedishCard = (fieldToLabel, editable=false) => class extends Component {\r\n    static IDENTIFIER = Object.keys(fieldToLabel)[0]\r\n\r\n    render() {\r\n        let {data, onChange, ...props} = this.props;\r\n        let className = \"index-card swedish\"\r\n        if (editable)\r\n            className += \" edit\"\r\n\r\n        return <div {...props} className={className}>\r\n            {\r\n                Object.entries(fieldToLabel).map(([dataField, label], index) => [\r\n                    <label key={label}>{label}</label>,\r\n\r\n                    editable ? <input key={\"input_\" + label} value={data[dataField] || \"\"} onChange={onChange(dataField)}\r\n                           autoFocus={index === 0}\r\n                    /> : <div key={\"display_\" + label}>{data[dataField] || \"\"}</div>\r\n                ])\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nSwedishCard.propTypes = {\r\n    data: PropTypes.any,\r\n    onChange: PropTypes.any\r\n}\r\nSwedishCard.defaultProps = {\r\n    onChange: () => () => null\r\n}\r\n\r\n\r\nexport const AdjectiveCard = SwedishCard(adjectiveFieldsToLabel)\r\nexport const NounCard = SwedishCard(nounFieldsToLabel)\r\nexport const VerbCard = SwedishCard(verbFieldsToLabel)\r\nexport const FreeTextCard = SwedishCard({value: \"Freitext\"})\r\n\r\nexport const AdjectiveCardEdit = SwedishCard(adjectiveFieldsToLabel, true)\r\nexport const NounCardEdit = SwedishCard(nounFieldsToLabel, true)\r\nexport const VerbCardEdit = SwedishCard(verbFieldsToLabel, true)\r\nexport const FreeTextCardEdit = SwedishCard({value: \"Freitext\"}, true)","import {\r\n    AdjectiveCard,\r\n    AdjectiveCardEdit,\r\n    FreeTextCard,\r\n    FreeTextCardEdit, NounCard,\r\n    NounCardEdit,\r\n    VerbCard,\r\n    VerbCardEdit\r\n} from \"../components/SwedishCard\";\r\n\r\nexport const WORDTYPES = {\r\n    FREE_TEXT: \"FREE_TEXT\",\r\n    VERB: \"VERB\",\r\n    ADJECTIVE: \"ADJ\",\r\n    NOUN: \"NOUN\"\r\n}\r\n\r\nexport const cardIsEmpty = (card) => !Boolean(\r\n    [card.german, ...Object.values(card.swedish)].filter(e => e !== \"\").length\r\n)\r\n\r\nexport function getEditComponentByWordtype(wordtype) {\r\n    switch (wordtype) {\r\n        case WORDTYPES.FREE_TEXT:\r\n            return FreeTextCardEdit\r\n        case WORDTYPES.VERB:\r\n            return VerbCardEdit\r\n        case WORDTYPES.ADJECTIVE:\r\n            return AdjectiveCardEdit\r\n        case WORDTYPES.NOUN:\r\n            return NounCardEdit\r\n    }\r\n}\r\n\r\nexport function getDisplayComponentByWordtype(wordtype) {\r\n    switch (wordtype) {\r\n        case WORDTYPES.FREE_TEXT:\r\n            return FreeTextCard\r\n        case WORDTYPES.VERB:\r\n            return VerbCard\r\n        case WORDTYPES.ADJECTIVE:\r\n            return AdjectiveCard\r\n        case WORDTYPES.NOUN:\r\n            return NounCard\r\n    }\r\n}","const request = require(\"request\")\r\nconst { parse } = require('node-html-parser')\r\nconst _ = require(\"lodash\")\r\n\r\nconst getUrlFromQuery = query => (process.env.REACT_APP_SVENSKASE_PROXY || document.location.origin) + \"/svenskase?sok=\"\r\n    + encodeURIComponent(query.trim().split(/\\s/).join(\"+\"))\r\n\r\nexport const TYPE_NOT_FOUND_EXCEPTION = \"Wanted type not found.\"\r\n\r\nconst WORD_TYPES = {\r\n    substantiv: \"NOUN\",\r\n    adjektiv: \"ADJ\",\r\n    verb: \"VERB\",\r\n    other: \"OTHER\"\r\n}\r\n\r\nexport function determineWordType(root) {\r\n    const foundWordType = root.querySelector(\"a.ordklass\")\r\n    if (!foundWordType)\r\n        return \"OTHER\"\r\n\r\n    const foundWordTypeTokens = foundWordType.text.split(/\\s/)\r\n    if (_.includes(foundWordTypeTokens, \"substantiv\"))\r\n        return WORD_TYPES.substantiv\r\n    if (_.includes(foundWordTypeTokens, \"adjektiv\"))\r\n        return WORD_TYPES.adjektiv\r\n    if (_.includes(foundWordTypeTokens, \"verb\"))\r\n        return WORD_TYPES.verb\r\n\r\n    return \"UNKOWN\"\r\n}\r\n\r\nexport function buildVerb(root) {\r\n    const result = {}\r\n\r\n    const cases = root.querySelectorAll(\".tabell tr *\").map(e => e.text.trim())\r\n\r\n    const finiteIndex = Math.max(cases.indexOf(\"Finita former\"), 0)\r\n    const infiniteIndex = Math.max(cases.indexOf(\"Infinita former\"), 0)\r\n    const presensParticipIndex = Math.max(cases.indexOf(\"Presens particip\"), 0)\r\n\r\n    // finites\r\n    for (let i = finiteIndex + 2; i < infiniteIndex; i += 2) {\r\n        if (cases[i] === \"presens aktiv\")\r\n            result.present_tense = cases[i-1]\r\n        else if (cases[i] === \"preteritum aktiv\")\r\n            result.preterite = cases[i-1]\r\n        else if (cases[i] === \"imperativ aktiv\")\r\n            result.imperative = cases[i-1]\r\n    }\r\n\r\n    // infinites\r\n    for (let i = infiniteIndex + 2; i < presensParticipIndex; i += 2) {\r\n        if (cases[i] === \"infinitiv aktiv\")\r\n            result.infinitive = cases[i-1].replace(\"att\", \"\").trim()\r\n        else if (cases[i] === \"supinum aktiv\")\r\n            result.supinum = cases[i-1].replace(\"har/hade\", \"\").trim()\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function buildAdjective(root) {\r\n    const result = {}\r\n\r\n    const cases = root.querySelectorAll(\".tabell tr *\").map(e => e.text.split(\"+\")[0].trim())\r\n\r\n    const positiveIndex = Math.max(cases.indexOf(\"Positiv\"), 0)\r\n        || Math.max(cases.indexOf(\"Ordform(er)\"), 0)\r\n        || Math.max(cases.indexOf(\"Perfekt particip\"), 0) // build adjective from verb\r\n    const comparativeIndex = Math.max(cases.indexOf(\"Komparativ\"), 0)\r\n    const superlativeIndex = cases.indexOf(\"Superlativ\")\r\n\r\n    // positives\r\n    for (let i = positiveIndex + 1; i < (comparativeIndex || cases.length); i += 1) {\r\n        let [indicator, form] = cases[i].split(/\\s/)\r\n        indicator = indicator.split(\"/\")\r\n\r\n\r\n        if (_.includes(indicator, \"en\"))\r\n            result.singular_utrum_indefinite = form\r\n        if (_.includes(indicator, \"ett\"))\r\n            result.singular_neutrum_indefinite = form\r\n        if (_.includes(indicator, \"de\"))\r\n            result.plural = form\r\n        if (_.includes(indicator, \"den\") && _.includes(indicator, \"det\"))\r\n            result.singular_definite = form\r\n    }\r\n\r\n    // komparatives\r\n    result.comparative = cases[comparativeIndex + 1].split(/\\s/)[1]\r\n\r\n    // superlatives\r\n    for (let i = superlativeIndex + 1; i < cases.length; i += 1) {\r\n        let [indicator, form] = cases[i].split(/\\s/)\r\n        if (indicator === \"är\") {\r\n            result.superlative = form\r\n            break;\r\n        }\r\n    }\r\n\r\n    // no comparative and superlative\r\n    if (comparativeIndex === 0 && superlativeIndex === -1) {\r\n        result.comparative = null\r\n        result.superlative = null\r\n    }\r\n\r\n    // e.g. \"fel\" has no comparative and no positives, only one form: \"fel\"\r\n    if (positiveIndex === cases.length - 2) {\r\n        result.singular_definite = cases[positiveIndex + 1]\r\n        result.singular_utrum_indefinite = cases[positiveIndex + 1]\r\n        result.singular_neutrum_indefinite = cases[positiveIndex + 1]\r\n        result.plural = cases[positiveIndex + 1]\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function buildNoun(root) {\r\n    const result = {}\r\n\r\n    const cases = root.querySelectorAll(\".tabell tr *\").map(e => e.text.trim())\r\n\r\n    result.noun_type = root.querySelector(\".ordform i\").text\r\n\r\n    const singularIndex = Math.max(cases.indexOf(\"Singular\"), 0)\r\n    const pluralIndex = Math.max(cases.indexOf(\"Plural\"), 0)\r\n\r\n    // singulars\r\n    for (let i = singularIndex + 2; i < pluralIndex; i += 2) {\r\n        if (cases[i] === \"obestämd form\")\r\n            result.singular_indefinite = cases[i-1].replace(result.noun_type, \"\").trim()\r\n        else if (cases[i] === \"bestämd form\")\r\n            result.singular_definite = cases[i-1]\r\n    }\r\n\r\n    // plural\r\n    for (let i = pluralIndex + 2; i < cases.length; i += 2) {\r\n        if (cases[i] === \"obestämd form\")\r\n            result.plural_indefinite = cases[i-1].replace(result.noun_type, \"\").trim()\r\n        else if (cases[i] === \"bestämd form\")\r\n            result.plural_definite = cases[i-1]\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function processSvenskaSeRequest(error, response, body, expectedWordType) {\r\n    if (error)\r\n        console.log(\"ERROR:\", error)\r\n\r\n    const forms = parse(body).querySelectorAll(\".lemma\")\r\n    const wordTypes = forms.map(lemma => determineWordType(lemma))\r\n\r\n    console.log(\"Found wordtypes\", wordTypes)\r\n\r\n    let wordType\r\n    let rootOfWordType\r\n    if (expectedWordType) {\r\n        rootOfWordType = forms[wordTypes.indexOf(expectedWordType.toUpperCase())]\r\n\r\n        if (rootOfWordType === undefined) {\r\n            if (expectedWordType.toUpperCase() === \"ADJ\" && _.includes(wordTypes, \"VERB\")) // adjective not found but verb (which can be adjectivatated) is there\r\n                rootOfWordType = forms[wordTypes.indexOf(\"VERB\")]\r\n            else if (_.includes(wordTypes, \"OTHER\")) {\r\n                console.log(\"Expected word type not found, try to work with the OTHER entry\")\r\n                rootOfWordType = forms[wordTypes.indexOf(\"OTHER\")]\r\n            } else\r\n                throw TYPE_NOT_FOUND_EXCEPTION\r\n        }\r\n\r\n        wordType = expectedWordType.toUpperCase()\r\n    } else if (forms.length === 1) {\r\n        [rootOfWordType, wordType] = [forms[0], wordTypes[0]]\r\n    } else {\r\n        [rootOfWordType, wordType] = [forms[0], wordTypes[0]]\r\n        console.log(\"No expected word type, using first lemma of type '\" + wordType + \"'\")\r\n    }\r\n\r\n    switch (wordType) {\r\n        case \"ADJ\":\r\n            return [\"ADJ\", buildAdjective(rootOfWordType)]\r\n        case \"NOUN\":\r\n            return [\"NOUN\", buildNoun(rootOfWordType)]\r\n        case \"VERB\":\r\n            return [\"VERB\", buildVerb(rootOfWordType)]\r\n        case \"UNKNOWN\":\r\n            throw \"Wordtype 'UNKNOWN'.\"\r\n        default:\r\n            throw \"Unknown wordtype '\" + wordType + \"'\"\r\n    }\r\n}\r\n\r\nexport function getResult(query, expectedWordType, callback=(() => null), onError=(() => null)) {\r\n    const {url, ...options} = {\r\n        url: getUrlFromQuery(query),\r\n        headers: {\r\n            \"Content-Type\": \"text/plain\",\r\n            \"Origin\": \"svenska.se\",\r\n            //\"Accept\": \"text/html; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    console.log(\"Sending request to\", url)\r\n\r\n    request(url, options,(error, response, body) => {\r\n        try {\r\n            const result = processSvenskaSeRequest(error, response, body, expectedWordType)\r\n            callback(result)\r\n        } catch(error) {\r\n            onError(error)\r\n        }\r\n    })\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport request from \"request\";\r\nimport {WORDTYPES} from \"../util/IndexCardUtil\";\r\nimport {getDisplayComponentByWordtype, getEditComponentByWordtype} from \"../util/IndexCardUtil\";\r\nimport {getResult} from \"../service/SvenskaSeService\";\r\n\r\nexport const IndexCardQuiz = ({quiztype, german, wordtype, swedish, onClick, onClickDelete}) => {\r\n    const SwedishComponent = getDisplayComponentByWordtype(wordtype)\r\n    return <div\r\n        className={\"index-card \" + wordtype.toLowerCase() + \" quiz \" + quiztype}\r\n        tabIndex={1} onClick={onClick}\r\n    >\r\n        <div><p>{german}</p></div>\r\n        <hr/>\r\n        <SwedishComponent data={swedish} key={\"swedish\"}/>\r\n    </div>\r\n}\r\n\r\nexport class IndexCardEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.defaultState = _.cloneDeep(props)\r\n    }\r\n\r\n    setState(state, callback) {\r\n        this.props.update({\r\n            german: this.props.german,\r\n            wordtype: this.props.wordtype,\r\n            swedish: this.props.swedish,\r\n            ...state\r\n        })\r\n    }\r\n\r\n    autofill() {\r\n        let identifyingWord = this.props.swedish[getEditComponentByWordtype(this.props.wordtype).IDENTIFIER];\r\n\r\n        if (!identifyingWord)\r\n            return\r\n\r\n        identifyingWord = identifyingWord.replace(/^att /, \"\")\r\n            .replace(/^en /, \"\")\r\n            .replace(/^ett /, \"\")\r\n\r\n        return getResult(identifyingWord, this.props.wordtype,\r\n            ([returnedWordType, data]) => this.setState({swedish: data}),\r\n            error => console.error(\"Could not autofill:\", error)\r\n        )\r\n    }\r\n\r\n    handleWordtypeChange(ev, wordtype) {\r\n        let newWordType = ev.target.value || wordtype\r\n        if (newWordType === this.props.wordtype)\r\n            return\r\n\r\n        this.setState({wordtype: newWordType, swedish: {}})\r\n    }\r\n\r\n    handleChangeInSwedish(field, ev) {\r\n        const swedish = JSON.parse(JSON.stringify(this.props.swedish))\r\n        swedish[field] = ev.target.value\r\n\r\n        this.setState({swedish})\r\n    }\r\n\r\n    saveCard() {\r\n        this.props.onSave()\r\n    }\r\n\r\n    handleShortcuts(ev) {\r\n        if (ev.ctrlKey) {\r\n            if (ev.key === \"Enter\") {\r\n                ev.preventDefault()\r\n                this.autofill()\r\n            }\r\n            if (ev.key === \"s\") {\r\n                ev.preventDefault()\r\n                this.saveCard()\r\n            }\r\n        } else if (ev.altKey) {\r\n            if (ev.key === \"v\") {\r\n                ev.preventDefault()\r\n                this.handleWordtypeChange({target: {value: WORDTYPES.VERB}})\r\n            }\r\n            if (ev.key === \"a\") {\r\n                ev.preventDefault()\r\n                this.handleWordtypeChange({target: {value: WORDTYPES.ADJECTIVE}})\r\n            }\r\n            if (ev.key === \"n\") {\r\n                ev.preventDefault()\r\n                this.handleWordtypeChange({target: {value: WORDTYPES.NOUN}})\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.focusInput)\r\n            this.focusInput.focus({ //simulate autofocus without the scrolling\r\n                preventScroll: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {german, wordtype, swedish} = this.props\r\n        if (!Boolean(wordtype))\r\n            return <div/>\r\n\r\n        const SwedishComponent = getEditComponentByWordtype(wordtype);\r\n\r\n        return <div tabIndex={1} onKeyDown={this.handleShortcuts.bind(this)}>\r\n            <select value={wordtype} onChange={this.handleWordtypeChange.bind(this)}>\r\n                <option value={WORDTYPES.FREE_TEXT}>Freitext</option>\r\n                <option value={WORDTYPES.VERB}>Verb</option>\r\n                <option value={WORDTYPES.NOUN}>Substantiv</option>\r\n                <option value={WORDTYPES.ADJECTIVE}>Adjektiv</option>\r\n            </select>\r\n            <div/>\r\n            <div className={\"index-card \" + wordtype.toLowerCase()}>\r\n                <div className=\"index-card edit german\">\r\n                    <label>Wort/Phrase:</label><input value={german} ref={ref => this.focusInput = ref}\r\n                                                      onChange={ev => this.setState({german: ev.target.value})}/>\r\n                </div>\r\n                <hr/>\r\n                <SwedishComponent onChange={field => ev => this.handleChangeInSwedish(field, ev)}\r\n                                  data={swedish}\r\n                />\r\n            </div>\r\n            <button onClick={this.autofill.bind(this)}>Automatisch befüllen</button>\r\n            <button onClick={() => this.setState({...this.defaultState})}>Zurücksetzen</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport const IndexCardSmall = ({german, swedish, wordtype, isFocused, onClick, onClickDelete}) => <div\r\n    className={\"index-card \" + wordtype.toLowerCase() + \" small\" + (isFocused ? \" focused\" : \"\")}\r\n    tabIndex={1} onClick={onClick}\r\n>\r\n    <div><p>{german}</p></div>\r\n    <hr/>\r\n    <div><p>{swedish[getEditComponentByWordtype(wordtype).IDENTIFIER]}</p></div>\r\n    <span className={\"delete-overlay\"} onClick={onClickDelete}>\r\n        <span className={\"glyphicon glyphicon-remove\"}/>\r\n    </span>\r\n</div>","import request from 'request'\r\n\r\nlet URL = process.env.REACT_APP_API_URL + \"/lecture/\"\r\nif (process.env.REACT_APP_API_URL.startsWith(\"/\"))\r\n    URL = document.location.origin + URL\r\n\r\nexport function get(onSuccess, onError=(() => null)) { // returns LectureEntityMeta: {name, description, id}\r\n    console.log(\"Fetching data from\", URL)\r\n    request(URL, function(error, response, body) {\r\n        if (error) {\r\n            return onError(error)\r\n        }\r\n        let statusCode = response.statusCode;\r\n        if (statusCode < 300 && statusCode >= 200) {\r\n            onSuccess(JSON.parse(body))\r\n        } else {\r\n            onError(body)\r\n        }\r\n    })\r\n}\r\n\r\nexport function getById(id, onSuccess, onError=(() => null)) { // returns lecture: {name, description, index_cards\r\n    const url = URL + id\r\n\r\n    console.log(\"Fetching data from\", url)\r\n\r\n    request(url, function(error, response, body) {\r\n        if (error) {\r\n            return onError(error)\r\n        }\r\n        let statusCode = response.statusCode;\r\n        if (statusCode < 300 && statusCode >= 200) {\r\n            let {index_cards, ...lecture} = JSON.parse(body)\r\n            onSuccess({...lecture, indexCards: index_cards})\r\n        } else {\r\n            onError(body)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function save(id, name, description, indexCards, onSuccess, onError) {\r\n    let url = URL\r\n    if (id)\r\n        url += id\r\n\r\n    console.log(\"Fetching data from\", url)\r\n\r\n    let body = {name, description, index_cards: indexCards}\r\n\r\n    request.post({url, body: JSON.stringify(body), headers: {\"Content-Type\": \"text/plain\"}}, function(error, response, body) {\r\n        if (error) {\r\n            return onError(error)\r\n        }\r\n        let statusCode = response.statusCode;\r\n        if (statusCode < 300 && statusCode >= 200) {\r\n            onSuccess(body)\r\n        } else {\r\n            onError(body)\r\n        }\r\n    })\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {IndexCardEdit, IndexCardSmall} from \"./IndexCard\";\r\nimport {save, getById} from \"../repository/lectureRepository\";\r\nimport {withRouter} from \"react-router\";\r\nimport {cardIsEmpty} from \"../util/IndexCardUtil\";\r\n\r\nclass LectureEdit extends React.Component {\r\n    // currentId is not in state because it should not issue an rerender\r\n    currentId = null\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {currentIndexCard: 0}\r\n    }\r\n\r\n    getLectureId = (props=this.props) => props.match.params.lectureId || null\r\n\r\n    componentDidMount() {\r\n        this.currentId = this.getLectureId()\r\n        if (this.currentId) {\r\n            getById(this.currentId, ({name, description, indexCards}) => {\r\n                this.nameInput.value = name\r\n                this.descriptionInput.value = description\r\n                this.props.loadIndexCards(indexCards)\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let currentNumIndexCards = this.props.indexCards.length;\r\n        let previousNumIndexCards = prevProps.indexCards.length;\r\n\r\n        if (previousNumIndexCards < currentNumIndexCards)\r\n            this.setState({currentIndexCard: currentNumIndexCards - 1})\r\n        else if (previousNumIndexCards > currentNumIndexCards)\r\n            this.setState({currentIndexCard: Math.min(currentNumIndexCards - 1, this.state.currentIndexCard)})\r\n\r\n        if (this.getLectureId(prevProps) !== this.getLectureId())\r\n            this.currentId = this.getLectureId()\r\n    }\r\n\r\n    onAddCard() {\r\n        window.scrollTo({top: 0})\r\n        this.props.addIndexCard()\r\n    }\r\n\r\n    saveLecture() {\r\n        save(this.currentId,\r\n            this.nameInput.value, this.descriptionInput.value, this.props.indexCards.filter(it => !cardIsEmpty(it)),\r\n            body => this.currentId === null ? this.props.history.push(\"/lecture/\" + body) : null,\r\n            (body) => console.error(\"Error on saving lecture:\", body))\r\n    }\r\n\r\n    goBackToOverview() {\r\n        this.props.resetIndexCards()\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        const {indexCards, updateIndexCard, deleteIndexCard} = this.props;\r\n        const {currentIndexCard} = this.state\r\n\r\n        return <div>\r\n            <div className={\"sticky-navigation\"}>\r\n                <button onClick={this.goBackToOverview.bind(this)}>Zurück zur Übersicht</button>\r\n            </div>\r\n            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 10fr\", marginBottom: \"24px\", marginTop: \"24px\"}}>\r\n                <label>Name der Lektion </label><input ref={ref => this.nameInput = ref}/>\r\n                <label>Beschreibung (optional)</label><textarea ref={ref => this.descriptionInput = ref}/>\r\n            </div>\r\n            <div className={\"lecture control-bar\"}>\r\n                <button onClick={this.saveLecture.bind(this)}>Lektion speichern</button>\r\n            </div>\r\n            <div className={\"lecture current-index-card\"}>\r\n                <IndexCardEdit {...indexCards[currentIndexCard]} key={currentIndexCard + indexCards.length}\r\n                               update={updateIndexCard(currentIndexCard)}\r\n                               onSave={this.onAddCard.bind(this)}\r\n                />\r\n            </div>\r\n            <div className={\"lecture index-cards\"}>\r\n                {\r\n                    indexCards.map((indexCard, index) =>\r\n                        <IndexCardSmall onClick={() => this.setState({currentIndexCard: index},\r\n                            () => window.scrollTo({top: 0, behavior: \"smooth\"}))}\r\n                                        onClickDelete={deleteIndexCard(index)}\r\n                                        isFocused={index === currentIndexCard}\r\n                                        {...indexCards[index]}\r\n                                        key={index}\r\n                        />\r\n                    )\r\n                }\r\n                <div className={\"add-index-card\"} onClick={this.onAddCard.bind(this)}>\r\n                    <span className=\"glyphicon glyphicon-plus\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    indexCards: state.indexCards\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addIndexCard: () => dispatch({type: \"ADD_INDEX_CARD\"}),\r\n    deleteIndexCard: (index) => () => dispatch({type: \"DELETE_INDEX_CARD\", index}),\r\n    updateIndexCard: (index) => (data) => dispatch({type: \"UPDATE_INDEX_CARD\", index, data}),\r\n    loadIndexCards: (indexCards) => dispatch({type: \"LOAD_INDEX_CARDS\", indexCards}),\r\n    resetIndexCards: () => dispatch({type: \"RESET_INDEX_CARDS\"})\r\n})\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LectureEdit))","import _ from 'lodash'\r\nimport {WORDTYPES} from \"../util/IndexCardUtil\";\r\n\r\nconst DEFAULT_INDEX_CARD = {german: \"\", wordtype: WORDTYPES.FREE_TEXT, swedish: {value: \"\"}}\r\n\r\nconst defaultState = {\r\n    indexCards: [DEFAULT_INDEX_CARD]\r\n}\r\n\r\nconst lectureReducer = (state=defaultState, action={}) => {\r\n    let newState = _.cloneDeep(state)\r\n\r\n    const {type, index, data, indexCards} = action\r\n\r\n    switch (type) {\r\n        case \"ADD_INDEX_CARD\":\r\n            newState.indexCards.push(_.cloneDeep(DEFAULT_INDEX_CARD))\r\n            break\r\n        case \"UPDATE_INDEX_CARD\":\r\n            newState.indexCards[index] = data\r\n            break\r\n        case \"DELETE_INDEX_CARD\":\r\n            newState.indexCards.splice(index, 1)\r\n            break\r\n        case \"LOAD_INDEX_CARDS\":\r\n            newState.indexCards = _.cloneDeep(indexCards)\r\n            break\r\n        case \"RESET_INDEX_CARDS\":\r\n            newState.indexCards = [_.cloneDeep(DEFAULT_INDEX_CARD)]\r\n            break\r\n        default:\r\n            break;\r\n    }\r\n    return newState\r\n}\r\nexport default lectureReducer","import React from 'react'\r\nimport {get} from '../repository/lectureRepository'\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst LectureMeta = ({name, description, onClickEdit, onClickStart}) => <div className={\"lecture-meta\"}>\r\n    <div>\r\n        <div>{name}</div>\r\n        <div>{description}</div>\r\n    </div>\r\n    <div className={\"lecture-meta buttongroup\"}>\r\n        <button onClick={onClickStart}>Lektion starten</button>\r\n        <button onClick={onClickEdit}>Editieren</button>\r\n    </div>\r\n</div>\r\n\r\nclass LectureOverview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {lectures: []}\r\n    }\r\n\r\n    snackMeta = {name: \"Snack: 20\", description: \"20 zufällige Vokabeln aus allen Lektionen.\", id: \"snack\"}\r\n\r\n    componentDidMount() {\r\n        get((lectureMetas) => this.setState({lectures: [this.snackMeta, ...lectureMetas]}),\r\n            (errorBody) => console.error(\"ERROR:\", errorBody))\r\n    }\r\n\r\n    onClickEdit = (lectureMeta) => () => this.props.history.push(\"/lecture/\" + lectureMeta.id)\r\n    onClickStart = (lectureMeta) => () => this.props.history.push(\"/quiz/yesno/\" + lectureMeta.id)\r\n\r\n    render() {\r\n        const {lectures} = this.state\r\n        return <div className={\"lecture-overview\"}>\r\n            <div>Lektionen</div>\r\n            <div className={\"lecture-meta\"}>\r\n                <button onClick={() => this.props.history.push(\"/lecture\")}>Lektion hinzufügen</button>\r\n            </div>\r\n            {\r\n                lectures.map((metaInfo, i) => <LectureMeta {...metaInfo} key={i}\r\n                                                           onClickEdit={this.onClickEdit(metaInfo)}\r\n                                                           onClickStart={this.onClickStart(metaInfo)}/>)\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(LectureOverview)","import React from \"react\";\r\n\r\nclass Swipeable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    onTouchStart(ev) {\r\n        this.touchDownX = ev.touches[0].screenX\r\n        this.props.onTouchStart(ev)\r\n    }\r\n\r\n    onTouchEnd(ev) {\r\n        let touchUp = ev.changedTouches[0].screenX\r\n        if (this.touchDownX !== null && Math.abs(touchUp - this.touchDownX) > 50) {\r\n            if (touchUp > this.touchDownX) //swipe right\r\n                this.props.onSwipeRight()\r\n            else\r\n                this.props.onSwipeLeft()\r\n        }\r\n        this.props.onTouchEnd(ev)\r\n    }\r\n\r\n    render() {\r\n        const {children, className, onTouchStart, onTouchEnd, onSwipeRight, onSwipeLeft, ...givenProps} = this.props\r\n        return <div onTouchStart={this.onTouchStart.bind(this)} onTouchEnd={this.onTouchEnd.bind(this)}\r\n                    className={className + \" swipeable\"} {...givenProps}>\r\n            {children}\r\n        </div>\r\n    }\r\n}\r\n\r\nSwipeable.defaultProps = {\r\n    onSwipeRight: () => null,\r\n    onSwipeLeft: () => null,\r\n    onTouchStart: () => null,\r\n    onTouchEnd: () => null\r\n}\r\nexport default Swipeable","import React from 'react'\r\nimport {getById} from \"../repository/lectureRepository\";\r\nimport {IndexCardQuiz} from \"./IndexCard\";\r\nimport _ from 'lodash'\r\nimport Swipeable from \"./Swipeable\";\r\n\r\nconst YesNoQuizResult = ({correct, wrong, className, redoQuiz, goBack, ...props}) => <div {...props}\r\n                                                                                  className={className}>\r\n    <div className={\"quiz yesno result\"}>\r\n        <div>Richtig:</div>\r\n        <div>{correct.length}</div>\r\n        <div>Falsch:</div>\r\n        <div>{wrong.length}</div>\r\n        <hr/>\r\n        <hr/>\r\n        <div>Ergebnis:</div>\r\n        <div>{parseInt(100 * correct.length / (correct.length + wrong.length))}%</div>\r\n        <button onClick={() => redoQuiz([...correct, ...wrong])}>\r\n            Alle wiederholen\r\n        </button>\r\n        <button onClick={() => redoQuiz(wrong)}>\r\n            Fehler wiederholen\r\n        </button>\r\n        <button style={{gridColumnStart: 1, gridColumnEnd: 3, width: \"100%\"}} onClick={goBack}>\r\n            Zurück zur Übersicht\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\nclass YesNoQuiz extends React.Component {\r\n    state = {unfinished: [], isTurned: false, correct: [], wrong: []}\r\n\r\n    componentDidMount() {\r\n        this.newRound(this.props.indexCards)\r\n    }\r\n\r\n    newRound(indexCards) {\r\n        this.setState({\r\n            unfinished: _.shuffle(_.cloneDeep(indexCards)),\r\n            isTurned: false, correct: [], wrong: []\r\n        })\r\n    }\r\n\r\n    onKeyDown(ev) {\r\n        switch (ev.key) {\r\n            case \"ArrowLeft\":\r\n                ev.preventDefault()\r\n                return this.nextCard(false)\r\n            case \"ArrowRight\":\r\n                ev.preventDefault()\r\n                return this.nextCard(true)\r\n            case \"Enter\":\r\n                ev.preventDefault()\r\n                return this.turnCard()\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    turnCard() {\r\n        const {isTurned} = this.state\r\n        if (!isTurned) {\r\n            this.setState({isTurned: true})\r\n        }\r\n    }\r\n\r\n    nextCard(wasRight) { // boolean\r\n        if (!this.state.isTurned) // safety first\r\n            return\r\n\r\n        const [currentCard, ...unfinished] = this.state.unfinished\r\n        if (wasRight) {\r\n            this.setState({unfinished, correct: [...this.state.correct, currentCard], isTurned: false})\r\n        } else {\r\n            this.setState({unfinished, wrong: [...this.state.wrong, currentCard], isTurned: false})\r\n        }\r\n    }\r\n\r\n    onTouchDown(ev) {\r\n        if (ev.target.classname === \"sticky-navigation\") {\r\n            console.log(\"AAAAHA!\")\r\n        } else\r\n            this.turnCard()\r\n    }\r\n\r\n    render() {\r\n        const {unfinished, isTurned, correct, wrong} = this.state\r\n\r\n        if (!unfinished.length)\r\n            return <div className={\"quiz yesno root \"}>\r\n                <YesNoQuizResult correct={correct} wrong={wrong} redoQuiz={this.newRound.bind(this)}\r\n                    goBack={() => window.location = \"/\"/*TODO: make push to history*/}\r\n                />\r\n            </div>\r\n\r\n        return <Swipeable tabIndex={1}\r\n                          id={\"foobarbaz\"}\r\n                          onClick={() => document.getElementById(\"foobarbaz\").focus()}\r\n                          className={\"quiz yesno root\"}\r\n                          onKeyDown={this.onKeyDown.bind(this)}\r\n                          onSwipeRight={() => this.nextCard(true)}\r\n                          onSwipeLeft={() => this.nextCard(false)}\r\n                          onTouchStart={this.onTouchDown.bind(this)}\r\n        >\r\n            <div className={\"sticky-navigation\"}>\r\n                <button onClick={() => this.setState({unfinished: [], wrong: [...wrong, ...unfinished]})}>Quiz abbrechen</button>\r\n            </div>\r\n            <div className={\"quiz yesno current-card\" + (!isTurned ? \" unturned\" : \"\")}>\r\n                <div onClick={this.turnCard.bind(this)}>\r\n                    <IndexCardQuiz {...unfinished[0]} quiztype={\"yesno\"}/>\r\n                </div>\r\n                <div className={\"buttongroup\"}>\r\n                    <button onClick={() => this.nextCard(false)}>Wusste ich nicht</button>\r\n                    <button onClick={() => this.nextCard(true)}>Wusste ich</button>\r\n                </div>\r\n            </div>\r\n        </Swipeable>\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loaded: false, data: []}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const lectureId = this.props.match.params.lectureId\r\n        getById(lectureId, (body) => this.setState({data: body.indexCards, loaded: true}))\r\n    }\r\n\r\n    render() {\r\n        const {loaded, data} = this.state\r\n        if (loaded)\r\n            return <YesNoQuiz indexCards={data}/>\r\n        else\r\n            return <Swipeable>Loading...</Swipeable>\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Lecture from \"./components/LectureEdit\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport lectureReducer from \"./domain/lectureReducer\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router\";\nimport LectureOverview from \"./components/LectureOverview\";\nimport YesNoQuiz from \"./components/YesNoQuiz\";\n\nfunction App() {\n\n    return (\n        <Provider className=\"App\" store={createStore(lectureReducer)}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path={\"/lecture/:lectureId?\"} component={Lecture}/>\n                    <Route path={\"/quiz/yesno/:lectureId\"} component={YesNoQuiz}/>\n                    <Route path={\"/\"} component={LectureOverview}/>\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}